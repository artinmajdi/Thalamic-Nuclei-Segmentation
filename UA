 Run Reg 
 values 1
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
Metric 0:  Not a Point-set
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
  similarity metric weight: 1
  Radius: [5, 5, 5]
  radius: [5, 5, 5]
 use Histogram Matching 
 prepro 
 set 
Use identity affine transform as initial affine para.
aff_init.IsNull()==1
Use identity affine transform as initial fixed affine para.
fixed_aff_init.IsNull()==1
Continue affine registration from the input
affine_opt.use_rotation_header = 0
affine_opt.ignore_void_orgin = 0
transform_initial: IsNotNull():0
OptAffine: metric_type=AffineWithMutualInformation
MI_bins=32 MI_samples=16000
number_of_seeds=0 time_seed=1601420766
number_of_levels=5
number_of_iteration_list=[10000,10000,10000,10000,10000]
graident_scales=[1,1,1,1,1,1,1,1,1,1,0.0001,0.0001,0.0001]
is_rigid = 0
mask null: 1
maximum_step_length=0.1
relaxation_factor=0.5
minimum_step_length=0.0001
translation_scales=0.0001
opt.transform_initial.IsNull(): 1
 opt.use_rotation_header: 0
 opt.ignore_void_orgin: 0
input affine center: [-2.04959, 17.3881, -32.2512]
input affine para: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, -3.536504888246544, -55.33000179992408, 20.835727047110804]
level 0, iter 228, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [0.09987475363850004, -0.0337225734998003, 0.007175687664901145, 0.9944024995587729, 1.0978942845035622, 1.0510297005820444, 1.0294655898744507, 0.03160913973485698, 0.003583561405718329, -0.09437697464508324, -4.541928435725576, -60.23472157880629, 10.134593314262352]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 204, size: fix[56, 56, 40]-mov[45, 55, 45], affine para: [0.10693075232333098, -0.026786703106599148, -0.001959136667958999, 0.9939036414702189, 1.1084337178206527, 1.0378532616896063, 1.0207340607725695, 0.023491531396510387, 0.0027992103051474575, -0.06717351340046065, -4.4382517715903544, -60.47273132312087, 9.036926984853446]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 232, size: fix[112, 112, 79]-mov[90, 110, 90], affine para: [0.10206893350526478, -0.03192528669067075, 0.0033679109686201372, 0.9942592046637153, 1.099506283424999, 1.019722330368798, 1.0258221944128632, 0.027214355552740394, 0.0021107533051849064, -0.04753468536871023, -4.420448802481974, -60.92840018370318, 8.46692071611742]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 1163, size: fix[224, 224, 158]-mov[180, 220, 180], affine para: [0.0944526795663667, -0.03525852220604409, 0.007831916192183288, 0.9948739563499175, 1.0986661503064021, 1.0194596848593076, 1.0275908355603345, 0.033119768111378976, 0.0057934976781101565, -0.04110003606955854, -4.832969358615017, -60.9227642551737, 8.089573094528163]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 1393, size: fix[448, 448, 144]-mov[256, 440, 256], affine para: [0.09996248072217342, -0.03478021958304568, 0.008214557276265784, 0.9943492142212309, 1.0957587668160467, 1.012944468768497, 1.0256610174918461, 0.03799454271342509, 0.008893662404507606, -0.03943063840285237, -4.711274267057865, -60.9463961355426, 8.50521041918475]
    reach oscillation, current step: 9.76563e-05<0.0001
A=1 0 0 
0 1 0 
0 0 1 

rotation R1 0 0 
0 1 0 
0 0 1 

upper R1 0 0 
0 1 0 
0 0 1 

s=0.25 u=0 v=0 w0 r=1
m_Rotation from vnl0 0 0 1
level 0, iter 569, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [-0.09281114777236725, 0.03336636678868803, -0.010514893243310132, 0.9950689490867355, 0.9247497733333288, 0.9456927711115087, 0.9507936715371053, -0.034506781509591966, -0.01943540210073195, 0.10239366270269569, 2.3702620825440746, 54.00988045410747, -18.269281894415634]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 179, size: fix[45, 55, 45]-mov[56, 56, 40], affine para: [-0.09945037421321724, 0.02959809994763269, -0.009538367686316399, 0.9945564815988188, 0.9165383800906881, 0.9594314407293529, 0.9755465287266227, -0.03455170435328202, -0.013835085575107962, 0.05867944059476712, 2.3496393208929702, 54.88807712459637, -19.168650913050126]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 195, size: fix[90, 110, 90]-mov[112, 112, 79], affine para: [-0.09604147746888123, 0.03411587649167017, -0.014185115824572062, 0.9946913712633899, 0.9160209120469909, 0.9721901948344038, 0.9731716999063513, -0.041024136178330915, -0.018629861416979584, 0.03760169504514516, 2.63507288536595, 56.26871720033844, -18.901296410208538]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 2556, size: fix[180, 220, 180]-mov[224, 224, 158], affine para: [-0.10087724342873133, 0.03254729487027038, -0.006600066617225472, 0.9943444546410948, 0.9150038320570455, 0.9752977769813554, 0.9625395391254133, -0.03736905737633283, -0.020865958072443416, 0.03724640199775152, 2.054800708742325, 56.52534139147898, -19.334778619877294]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 539, size: fix[256, 440, 256]-mov[448, 448, 144], affine para: [-0.09815053949980823, 0.0244920847694476, -0.0006352308948140388, 0.994869944194342, 0.9190199895097474, 0.981776165755476, 0.9649804099389316, -0.029479016095092573, -0.012497264965952534, 0.026190314095174954, 2.2199896832958728, 56.8662140552616, -19.12796588739689]
    reach oscillation, current step: 9.76563e-05<0.0001
 v1 -0.244848 v2 -0.250536
 last params [0.09996248072217342, -0.03478021958304568, 0.008214557276265784, 0.9943492142212309, 1.0957587668160467, 1.012944468768497, 1.0256610174918461, 0.03799454271342509, 0.008893662404507606, -0.03943063840285237, -4.711274267057865, -60.9463961355426, 8.50521041918475]
 my params [-0.09815053949980823, 0.0244920847694476, -0.0006352308948140388, 0.994869944194342, 0.9190199895097474, 0.981776165755476, 0.9649804099389316, -0.029479016095092573, -0.012497264965952534, 0.026190314095174954, 2.2199896832958728, 56.8662140552616, -19.12796588739689]
A=1.0873 0.0252135 -0.0468542 
-0.00493569 0.993637 -0.225536 
0.0506306 0.202349 1.01508 

rotation R0.998907 -0.00477975 -0.0464902 
-0.00453446 0.980151 -0.198201 
0.0465147 0.198195 0.979058 

upper R1.08849 0.0300925 0.00143594 
0 1.0139 -0.0196517 
0 0 1.0407 

s=0.251319 u=0.0996218 v=-0.0233739 w6.16466e-05 r=0.994751
m_Rotation from vnl0.0996218 -0.0233739 6.16466e-05 0.994751
 new params [0.09962176929792933, -0.02337392266521405, 0.00006164662160511066, 0.9947508024731042, 1.0884859175646593, 1.0138983268838055, 1.0407030794849959, 0.02764622692350478, 0.0013192067125801577, -0.019382344082636966, -4.743806461419507, -60.80746411959198, 7.797206230245671]
outputput affine center: [-2.04959, 17.3881, -32.2512]
output affine para: [0.09962176929792933, -0.02337392266521405, 0.00006164662160511066, 0.9947508024731042, 1.0884859175646593, 1.0138983268838055, 1.0407030794849959, 0.02764622692350478, 0.0013192067125801577, -0.019382344082636966, -4.743806461419507, -60.80746411959198, 7.797206230245671]
initial measure value (MMI): rval = -0.134582
final measure value (MMI): rval = -0.237527
finish affine registeration...
 Requested Transformation Model:  SyN : Using 
SyN diffeomorphic model for transformation. 
  Grad Step 0.5 total-smoothing 0.5 gradient-smoothing 3
 setting N-TimeSteps = 1 trunc 256
 Registration Done 
 begin writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/temp/deformation/linear
 writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/temp/deformation/linear affine 
AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/temp/deformation/linearAffine.txt
moving_image_filename: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/CropMaskV3.nii.gz components 1
output_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/temp/CropMask.nii.gz
reference_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/PProcessed.nii.gz
[0/1]: AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol6/temp/deformation/linearAffine.txt
User Linear interpolation 
 You are doing something more complex -- we wont check syntax in this case 
output origin: [-111.246, -111.852, -109.557]
output size: [448, 448, 144]
output spacing: [0.5, 0.5, 1.1]
output direction: 0.999164 -0.0244151 0.0328047
0.0256283 0.998983 -0.0370885
-0.0318658 0.0378982 0.998773

 Run Reg 
 values 1
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
Metric 0:  Not a Point-set
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
  similarity metric weight: 1
  Radius: [5, 5, 5]
  radius: [5, 5, 5]
 use Histogram Matching 
 prepro 
 set 
Use identity affine transform as initial affine para.
aff_init.IsNull()==1
Use identity affine transform as initial fixed affine para.
fixed_aff_init.IsNull()==1
Continue affine registration from the input
affine_opt.use_rotation_header = 0
affine_opt.ignore_void_orgin = 0
transform_initial: IsNotNull():0
OptAffine: metric_type=AffineWithMutualInformation
MI_bins=32 MI_samples=16000
number_of_seeds=0 time_seed=1601420996
number_of_levels=5
number_of_iteration_list=[10000,10000,10000,10000,10000]
graident_scales=[1,1,1,1,1,1,1,1,1,1,0.0001,0.0001,0.0001]
is_rigid = 0
mask null: 1
maximum_step_length=0.1
relaxation_factor=0.5
minimum_step_length=0.0001
translation_scales=0.0001
opt.transform_initial.IsNull(): 1
 opt.use_rotation_header: 0
 opt.ignore_void_orgin: 0
input affine center: [0.527909, 15.726, -47.0988]
input affine para: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, -6.095981595335139, -53.70364516028641, 35.55026157233134]
level 0, iter 278, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [0.10422408229366194, 0.020988175403412055, -0.0007822143888550816, 0.9943320498223567, 1.0343447319120853, 1.09451392564789, 1.0830715736938594, -0.003637598977423328, -0.009323022852056287, -0.08600320403677222, -6.234400445480757, -58.80498885933924, 19.971961673540395]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 569, size: fix[56, 56, 44]-mov[45, 55, 45], affine para: [0.11694462021701096, 0.023051096690802957, 0.0018899917239035872, 0.9928690904016169, 1.031554177198135, 1.0696504503592639, 1.0630081243120948, -0.0022729867166520474, -0.016459840618435355, -0.044054255869941425, -6.575908177236188, -59.907220786182556, 19.9502371047694]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 470, size: fix[112, 112, 88]-mov[90, 110, 90], affine para: [0.11023372943821834, 0.028820556500352264, -0.0043965811962199085, 0.9934780171150928, 1.0194512517310712, 1.057318928982169, 1.062258866734534, -0.007122694004685277, -0.018408399190167696, -0.03121851492077665, -6.22780210901685, -60.17674034691017, 19.07405304327085]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 1102, size: fix[224, 224, 176]-mov[180, 220, 180], affine para: [0.11725151157301548, 0.024778943911537444, -0.0017395011367732777, 0.9927915496760974, 1.0137880631352028, 1.0557890958278986, 1.0616522154707264, 0.00115680001340952, -0.022777685316690825, -0.03366579768548562, -6.310180436560719, -60.86701951291162, 18.784122638583153]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 286, size: fix[448, 448, 160]-mov[256, 440, 256], affine para: [0.11563460487582977, 0.026126359302822463, 0.002080601535436273, 0.9929459817140314, 1.0171135168804049, 1.0540110574315185, 1.0700635163314702, 0.004932407294552069, -0.024353197675325802, -0.035580026068065713, -6.311818376602389, -60.68536484735619, 18.532727383938973]
    reach oscillation, current step: 9.76563e-05<0.0001
A=1 0 0 
0 1 0 
0 0 1 

rotation R1 0 0 
0 1 0 
0 0 1 

upper R1 0 0 
0 1 0 
0 0 1 

s=0.25 u=0 v=0 w0 r=1
m_Rotation from vnl0 0 0 1
level 0, iter 276, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [-0.10585827898987898, -0.021512432412841297, 0.006912344539255639, 0.9941244688236753, 0.9771787540781106, 0.9050154867338932, 0.9190607275880291, 0.004516165093270139, 0.015621365719204267, 0.07175892988460392, 6.361761080286995, 47.990241891417234, -27.59407740236614]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 245, size: fix[45, 55, 45]-mov[56, 56, 44], affine para: [-0.11470095849397348, -0.01909550896659882, -0.0026791227231734893, 0.9932129046479936, 0.9833359273819241, 0.9258755358011842, 0.9199058625391238, -0.004834572172543859, 0.011673049689290782, 0.037737245004105524, 6.888568896300025, 49.66228842700657, -28.091178202711713]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 321, size: fix[90, 110, 90]-mov[112, 112, 88], affine para: [-0.11147561884947917, -0.02447754944635941, 0.002708029968023187, 0.9934619784113123, 0.9840760288179685, 0.9448413139537691, 0.9168117129604546, 0.002401251577318418, 0.009678412176361407, 0.034427461640380165, 6.9900251422743835, 51.923819609691485, -27.829186883839355]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 267, size: fix[180, 220, 180]-mov[224, 224, 176], affine para: [-0.11556300379307329, -0.027844384744524945, 0.008105230732781422, 0.9928767232780157, 0.9931683511567718, 0.946617202552254, 0.9291876064544389, 0.003398826694041155, 0.018543703617286203, 0.03986271782952894, 6.169883875474669, 51.71602574218121, -28.86768479052273]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 422, size: fix[256, 440, 256]-mov[448, 448, 160], affine para: [-0.11389093896598587, -0.020590217253600197, 0.010187938428130613, 0.9932276188696528, 1.0009715568281627, 0.957315702683835, 0.9140106219687326, 0.004589578601409425, 0.0076066569933508086, 0.030625479095844826, 6.228087809472978, 53.14972818598862, -28.146702638600882]
    reach oscillation, current step: 9.76563e-05<0.0001
 v1 -0.254511 v2 -0.252345
final [0.11563460487582977, 0.026126359302822463, 0.002080601535436273, 0.9929459817140314, 1.0171135168804049, 1.0540110574315185, 1.0700635163314702, 0.004932407294552069, -0.024353197675325802, -0.035580026068065713, -6.311818376602389, -60.68536484735619, 18.532727383938973]
outputput affine center: [0.527909, 15.726, -47.0988]
output affine para: [0.11563460487582977, 0.026126359302822463, 0.002080601535436273, 0.9929459817140314, 1.0171135168804049, 1.0540110574315185, 1.0700635163314702, 0.004932407294552069, -0.024353197675325802, -0.035580026068065713, -6.311818376602389, -60.68536484735619, 18.532727383938973]
initial measure value (MMI): rval = -0.167648
final measure value (MMI): rval = -0.254826
finish affine registeration...
 Requested Transformation Model:  SyN : Using 
SyN diffeomorphic model for transformation. 
  Grad Step 0.5 total-smoothing 0.5 gradient-smoothing 3
 setting N-TimeSteps = 1 trunc 256
 Registration Done 
 begin writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/temp/deformation/linear
 writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/temp/deformation/linear affine 
AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/temp/deformation/linearAffine.txt
moving_image_filename: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/CropMaskV3.nii.gz components 1
output_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/temp/CropMask.nii.gz
reference_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/PProcessed.nii.gz
[0/1]: AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol7/temp/deformation/linearAffine.txt
User Linear interpolation 
 You are doing something more complex -- we wont check syntax in this case 
output origin: [-115.22, -105.318, -134.585]
output size: [448, 448, 160]
output spacing: [0.5, 0.5, 1.1]
output direction: 0.999702 -0.0244313 0
0.0244313 0.999702 0
0 0 1

 Run Reg 
 values 1
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
Metric 0:  Not a Point-set
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
  similarity metric weight: 1
  Radius: [5, 5, 5]
  radius: [5, 5, 5]
 use Histogram Matching 
 prepro 
 set 
Use identity affine transform as initial affine para.
aff_init.IsNull()==1
Use identity affine transform as initial fixed affine para.
fixed_aff_init.IsNull()==1
Continue affine registration from the input
affine_opt.use_rotation_header = 0
affine_opt.ignore_void_orgin = 0
transform_initial: IsNotNull():0
OptAffine: metric_type=AffineWithMutualInformation
MI_bins=32 MI_samples=16000
number_of_seeds=0 time_seed=1601421303
number_of_levels=5
number_of_iteration_list=[10000,10000,10000,10000,10000]
graident_scales=[1,1,1,1,1,1,1,1,1,1,0.0001,0.0001,0.0001]
is_rigid = 0
mask null: 1
maximum_step_length=0.1
relaxation_factor=0.5
minimum_step_length=0.0001
translation_scales=0.0001
opt.transform_initial.IsNull(): 1
 opt.use_rotation_header: 0
 opt.ignore_void_orgin: 0
input affine center: [4.28073, 3.5361, 30.3535]
input affine para: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, -9.870949501705898, -41.92871240829069, -43.19349581159376]
level 0, iter 275, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [0.04142464044444393, -0.009607170982153173, 0.027539715276732345, 0.9987158081818095, 0.9307017575515811, 0.9705632132196882, 0.8698532538297534, 0.013286371073472572, -0.01061761988904995, -0.07589881069682183, -7.93089097150325, -45.06608731745639, -52.45088670996476]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 299, size: fix[56, 56, 44]-mov[45, 55, 45], affine para: [0.02388143090858765, -0.019232815967232465, 0.027470373516521412, 0.9991522179460904, 0.9431549530283293, 0.9518444646602551, 0.8836391474417412, 0.01570051459170036, 0.005439275632610619, -0.06016076308571261, -8.289612427279605, -45.09846176878046, -54.3251700043874]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 6933, size: fix[112, 112, 88]-mov[90, 110, 90], affine para: [0.024701903788524167, -0.012725634755041366, 0.019046845270209976, 0.9994323848337898, 0.9410593765988788, 0.940031497191835, 0.897208322835633, 0.0009047223895771579, -0.000045963451858627094, -0.05962431124076742, -7.69005142349529, -45.74228336250433, -55.281827705781254]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 1404, size: fix[224, 224, 176]-mov[180, 220, 180], affine para: [0.023833029810141914, -0.006487019018475888, 0.015162861856443435, 0.9995799082087661, 0.9439167460522037, 0.9406924873144553, 0.909826581523615, -0.00023887372410097426, -0.0055824727244225885, -0.05948568191295386, -8.019574112233316, -46.31504154325963, -55.99854080376026]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 1201, size: fix[448, 448, 160]-mov[256, 440, 256], affine para: [0.02720988477765154, -0.0011944781874184682, 0.013863653643224613, 0.9995328881532151, 0.9458180075643082, 0.9427593438885058, 0.913732780411646, -0.004812097688334957, -0.010465732462434032, -0.05426491249642659, -8.104970591616139, -46.40910526916148, -56.18672761214779]
    reach oscillation, current step: 9.76563e-05<0.0001
A=1 0 0 
0 1 0 
0 0 1 

rotation R1 0 0 
0 1 0 
0 0 1 

upper R1 0 0 
0 1 0 
0 0 1 

s=0.25 u=0 v=0 w0 r=1
m_Rotation from vnl0 0 0 1
level 0, iter 419, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [-0.03327651631195881, -0.00017043798708339498, -0.029164891064821626, 0.9990205471071201, 1.0852594601770202, 1.0337619333950527, 1.0944851400146542, -0.010092551460991896, -0.0009162731099429297, 0.06549304273887788, 11.777113169468306, 53.42207981455374, 57.801386030884395]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 287, size: fix[45, 55, 45]-mov[56, 56, 44], affine para: [-0.04038217436913024, 0.014819276922177604, -0.030824109488283447, 0.9985987899546941, 1.0664083252886836, 1.049125686207784, 1.093515685808244, -0.010566885323620915, -0.00607168856218459, 0.04026524457978934, 12.752553784185789, 54.35325748538245, 58.2630311140545]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 450, size: fix[90, 110, 90]-mov[112, 112, 88], affine para: [-0.029591321357710518, 0.01730583978987388, -0.026635580828610464, 0.9990572593417228, 1.0587860580854118, 1.0657730488669792, 1.083193140718189, -0.007546062591027514, -0.0052185217314438415, 0.04830625678064066, 12.768120840508061, 54.55128872122826, 57.920809481936594]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 1458, size: fix[180, 220, 180]-mov[224, 224, 176], affine para: [-0.03413636695090343, 0.013629167550674021, -0.024583709327796074, 0.9990218193207571, 1.058048553894554, 1.0685266521284413, 1.0810439760710548, 0.002114113040939754, -0.01872501412232871, 0.03329776951068876, 12.337998860926248, 54.98033271640509, 57.72335989543327]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 721, size: fix[256, 440, 256]-mov[448, 448, 160], affine para: [-0.03521013199506147, 0.011980485396530814, -0.01798578412490714, 0.9991462486262789, 1.0535639918409592, 1.0779604296441871, 1.0841226901780385, -0.0001106585510657002, -0.014037932186899794, 0.051260053608043935, 11.568181977958185, 55.99360070027811, 57.88969371421957]
    reach oscillation, current step: 9.76563e-05<0.0001
 v1 -0.233068 v2 -0.260873
 last params [0.02720988477765154, -0.0011944781874184682, 0.013863653643224613, 0.9995328881532151, 0.9458180075643082, 0.9427593438885058, 0.913732780411646, -0.004812097688334957, -0.010465732462434032, -0.05426491249642659, -8.104970591616139, -46.40910526916148, -56.18672761214779]
 my params [-0.03521013199506147, 0.011980485396530814, -0.01798578412490714, 0.9991462486262789, 1.0535639918409592, 1.0779604296441871, 1.0841226901780385, -0.0001106585510657002, -0.014037932186899794, 0.051260053608043935, 11.568181977958185, 55.99360070027811, 57.88969371421957]
A=0.948603 -0.0339069 -0.00862084 
0.031367 0.921471 -0.112823 
0.0232511 0.064503 0.919853 

rotation R0.999154 -0.0346775 -0.0221085 
0.0330386 0.996956 -0.0706216 
0.0244902 0.0698315 0.997258 

upper R0.949406 -0.00185443 0.0101863 
0 0.924346 -0.047946 
0 0 0.925489 

s=0.250208 u=0.0351424 v=-0.0116593 w0.0169431 r=0.999171
m_Rotation from vnl0.0351424 -0.0116593 0.0169431 0.999171
 new params [0.03514241735201307, -0.011659344900524875, 0.01694308512376974, 0.9991706571180102, 0.9494057706852969, 0.9243461234593175, 0.9254891606032837, -0.0019532563166389247, 0.01072914557555675, -0.051870159815202405, -8.575978847215266, -45.428049468374546, -57.13073372835868]
outputput affine center: [4.28073, 3.5361, 30.3535]
output affine para: [0.03514241735201307, -0.011659344900524875, 0.01694308512376974, 0.9991706571180102, 0.9494057706852969, 0.9243461234593175, 0.9254891606032837, -0.0019532563166389247, 0.01072914557555675, -0.051870159815202405, -8.575978847215266, -45.428049468374546, -57.13073372835868]
initial measure value (MMI): rval = -0.164409
final measure value (MMI): rval = -0.240813
finish affine registeration...
 Requested Transformation Model:  SyN : Using 
SyN diffeomorphic model for transformation. 
  Grad Step 0.5 total-smoothing 0.5 gradient-smoothing 3
 setting N-TimeSteps = 1 trunc 256
 Registration Done 
 begin writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/temp/deformation/linear
 writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/temp/deformation/linear affine 
AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/temp/deformation/linearAffine.txt
moving_image_filename: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/CropMaskV3.nii.gz components 1
output_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/temp/CropMask.nii.gz
reference_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/PProcessed.nii.gz
[0/1]: AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol8/temp/deformation/linearAffine.txt
User Linear interpolation 
 You are doing something more complex -- we wont check syntax in this case 
output origin: [-118.662, -108.569, -42.0406]
output size: [448, 448, 160]
output spacing: [0.5, 0.5, 1.1]
output direction: 0.99859 0.0348729 0.0400332
-0.035913 0.999028 0.0255626
-0.0391028 -0.0269642 0.998871

 Run Reg 
 values 1
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
Metric 0:  Not a Point-set
  Fixed image file: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/PProcessed.nii.gz
  Moving image file: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/origtemplate.nii.gz
  similarity metric weight: 1
  Radius: [5, 5, 5]
  radius: [5, 5, 5]
 use Histogram Matching 
 prepro 
 set 
Use identity affine transform as initial affine para.
aff_init.IsNull()==1
Use identity affine transform as initial fixed affine para.
fixed_aff_init.IsNull()==1
Continue affine registration from the input
affine_opt.use_rotation_header = 0
affine_opt.ignore_void_orgin = 0
transform_initial: IsNotNull():0
OptAffine: metric_type=AffineWithMutualInformation
MI_bins=32 MI_samples=16000
number_of_seeds=0 time_seed=1601421650
number_of_levels=5
number_of_iteration_list=[10000,10000,10000,10000,10000]
graident_scales=[1,1,1,1,1,1,1,1,1,1,0.0001,0.0001,0.0001]
is_rigid = 0
mask null: 1
maximum_step_length=0.1
relaxation_factor=0.5
minimum_step_length=0.0001
translation_scales=0.0001
opt.transform_initial.IsNull(): 1
 opt.use_rotation_header: 0
 opt.ignore_void_orgin: 0
input affine center: [1.70257, 12.1322, 19.0496]
input affine para: [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, -7.298714932763352, -50.214685075080894, -30.868635820726595]
level 0, iter 282, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [0.07535124932260213, 0.013527415620384125, 0.008008185691306203, 0.9970331324555318, 0.9964265727016252, 1.039825954401262, 0.9998384099389394, 0.022637903479337022, -0.011224104962608103, -0.03555606556606086, -6.890593931491312, -53.30093464488956, -42.509908442502514]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 466, size: fix[56, 56, 44]-mov[45, 55, 45], affine para: [0.07121328370739086, 0.022191122693767985, -0.0036755983426254367, 0.9972074569887776, 1.0001159518231464, 1.0052487144214661, 0.998095059517845, 0.0093073541638376, -0.020989149021630876, 0.01165719465877201, -6.644646292447449, -53.23345950161875, -46.12598203296759]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 450, size: fix[112, 112, 88]-mov[90, 110, 90], affine para: [0.0768268729417646, 0.0030091023682901935, 0.013230531351164192, 0.9969521201828565, 0.9923371568441087, 0.9996937916711, 0.9954066960412667, 0.020485079945878167, -0.0014327955102217183, 0.0254476118324685, -6.863361246648667, -53.552488615109894, -47.96861049781843]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 1087, size: fix[224, 224, 176]-mov[180, 220, 180], affine para: [0.06326909457622303, 0.018177374281548257, 0.004417464211783251, 0.9978211717265129, 0.9897463755597509, 1.0004342313748988, 1.0085704299526295, 0.005186860754188618, -0.011055630359234044, 0.03482936975847233, -6.976960779632551, -52.88454502242103, -48.76839736871527]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 556, size: fix[448, 448, 160]-mov[256, 440, 256], affine para: [0.06542933017335167, 0.016060982772232064, 0.005214586219760965, 0.9977143156615591, 0.9826982761105583, 0.9916781511768833, 1.0059069998152674, 0.007618324691382367, -0.008838486460223598, 0.03282721610350632, -7.117274667468486, -52.791361008488934, -48.87403428254147]
    reach oscillation, current step: 9.76563e-05<0.0001
A=1 0 0 
0 1 0 
0 0 1 

rotation R1 0 0 
0 1 0 
0 0 1 

upper R1 0 0 
0 1 0 
0 0 1 

s=0.25 u=0 v=0 w0 r=1
m_Rotation from vnl0 0 0 1
level 0, iter 294, size: fix[32, 32, 32]-mov[32, 32, 32], affine para: [-0.07427673277671873, -0.02105211552710036, -0.02762432635654124, 0.9966326665292468, 1.0117540917816017, 0.9732821521082562, 0.9432164666423355, -0.0319625452064838, 0.014459229286892238, 0.008269124760570457, 7.4776217298973355, 57.977681647433, 36.25661301635598]
    reach oscillation, current step: 9.76563e-05<0.0001
level 1, iter 350, size: fix[45, 55, 45]-mov[56, 56, 44], affine para: [-0.0706415937070431, -0.012341680617394653, -0.009288084166279489, 0.9973821632907757, 1.0071502897931246, 1.000603773171688, 0.9665940333248424, -0.018235874824906094, 0.012701150177360827, -0.016090924888192963, 6.526893413533818, 58.520308978726874, 38.88570599988994]
    reach oscillation, current step: 9.76563e-05<0.0001
level 2, iter 594, size: fix[90, 110, 90]-mov[112, 112, 88], affine para: [-0.07675094563523421, -0.012059615824752972, -0.013556796419862543, 0.9968851846030651, 1.0107602252835572, 1.004549121025803, 0.986168314004351, -0.01806285943921677, 0.0066337261431255075, -0.03455173783304258, 6.816221201224769, 58.76020515033798, 39.538868074850434]
    reach oscillation, current step: 9.76563e-05<0.0001
level 3, iter 560, size: fix[180, 220, 180]-mov[224, 224, 176], affine para: [-0.07100731248800853, -0.02351657106336075, -0.007052798383105619, 0.9971736009811026, 1.006283066770404, 1.0095780985535456, 0.9806527662301179, -0.014385816696926672, 0.02071887054891674, -0.023499801689154175, 5.934544947334336, 58.978581603894575, 40.4130016248965]
    reach oscillation, current step: 9.76563e-05<0.0001
level 4, iter 1236, size: fix[256, 440, 256]-mov[448, 448, 160], affine para: [-0.06155616122890105, -0.012855329937093866, -0.023196790909199856, 0.9977512156837919, 1.0141939533584503, 1.0111057745805563, 0.9854797969973874, -0.029154957428783882, 0.002875807229909683, -0.02413384554008138, 6.937017191443826, 57.760007771943, 41.53978742631607]
    reach oscillation, current step: 9.76563e-05<0.0001
 v1 -0.23026 v2 -0.231858
 last params [0.06542933017335167, 0.016060982772232064, 0.005214586219760965, 0.9977143156615591, 0.9826982761105583, 0.9916781511768833, 1.0059069998152674, 0.007618324691382367, -0.008838486460223598, 0.03282721610350632, -7.117274667468486, -52.791361008488934, -48.87403428254147]
 my params [-0.06155616122890105, -0.012855329937093866, -0.023196790909199856, 0.9977512156837919, 1.0141939533584503, 1.0111057745805563, 0.9854797969973874, -0.029154957428783882, 0.002875807229909683, -0.02413384554008138, 6.937017191443826, 57.760007771943, 41.53978742631607]
A=0.986048 -0.0157678 0.0223982 
0.0467878 0.98348 -0.0966007 
-0.0231329 0.125251 1.00671 

rotation R0.998602 -0.0440389 0.0292338 
0.0473835 0.990921 -0.125819 
-0.0234274 0.127028 0.991622 

upper R0.987429 0.0279206 -0.00579502 
0 0.991155 0.0311704 
0 0 1.01108 

s=0.250591 u=0.0633613 v=0.0131964 w0.0229097 r=0.99764
m_Rotation from vnl0.0633613 0.0131964 0.0229097 0.99764
 new params [0.06336126972963493, 0.013196442405066388, 0.022909650144009006, 0.9976403917927427, 0.9874287252258045, 0.9911552696911119, 1.0110839478934501, 0.02827607214754811, -0.005868796749000501, 0.031448517446716936, -6.859900555535634, -53.11758274530225, -48.89246701401702]
outputput affine center: [1.70257, 12.1322, 19.0496]
output affine para: [0.06336126972963493, 0.013196442405066388, 0.022909650144009006, 0.9976403917927427, 0.9874287252258045, 0.9911552696911119, 1.0110839478934501, 0.02827607214754811, -0.005868796749000501, 0.031448517446716936, -6.859900555535634, -53.11758274530225, -48.89246701401702]
initial measure value (MMI): rval = -0.149577
final measure value (MMI): rval = -0.230715
finish affine registeration...
 Requested Transformation Model:  SyN : Using 
SyN diffeomorphic model for transformation. 
  Grad Step 0.5 total-smoothing 0.5 gradient-smoothing 3
 setting N-TimeSteps = 1 trunc 256
 Registration Done 
 begin writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/temp/deformation/linear
 writing /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/temp/deformation/linear affine 
AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/temp/deformation/linearAffine.txt
moving_image_filename: /array/ssd/msmajdi/code/CNN/general/RigidRegistration/CropMaskV3.nii.gz components 1
output_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/temp/CropMask.nii.gz
reference_image_filename: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/PProcessed.nii.gz
[0/1]: AFFINE: /array/hdd/msmajdi/data/new_data_simenes_scanner/UA_adcc/WMn/step1_preprocessed//cast_vol9/temp/deformation/linearAffine.txt
User Linear interpolation 
 You are doing something more complex -- we wont check syntax in this case 
output origin: [-106.707, -121.307, -42.3024]
output size: [448, 448, 160]
output spacing: [0.5, 0.5, 1.1]
output direction: 0.999702 -0.02443 1.62739e-07
0.0241489 0.988199 0.151261
-0.00369547 -0.151216 0.988494

/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:523: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:524: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:532: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/array/ssd/msmajdi/anaconda3/envs/new-env-fb/lib/python3.6/site-packages/sklearn/externals/joblib/__init__.py:15: DeprecationWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.
  warnings.warn(msg, category=DeprecationWarning)
Using TensorFlow backend.
(0/5) test cast_vol5
     Rigid Registration
     Cropping
     Bias Correction
     ReSlicing
(1/5) test cast_vol6
     Rigid Registration
     Cropping
     Bias Correction
     ReSlicing
(2/5) test cast_vol7
     Rigid Registration
     Cropping
     Bias Correction
     ReSlicing
(3/5) test cast_vol8
     Rigid Registration
     Cropping
     Bias Correction
     ReSlicing
(4/5) test cast_vol9
     Rigid Registration
     Cropping
     Bias Correction
     ReSlicing
